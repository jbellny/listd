generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

    username String @unique

    createdAt DateTime @default(now())

    updatedAt DateTime @updatedAt

    Feed Feed[]
}

enum Visibility {
    Public
    Unlisted
    Private
}

model Feed {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

    name String

    description String?

    visibility Visibility

    creator User @relation(fields: [userId], references: [id])

    userId String @db.Uuid

    items FeedItem[]

    createdAt DateTime @default(now())

    updatedAt DateTime @updatedAt
}

enum FeedItemType {
    YouTubeChannel
}

model FeedItem {
    id Int @id @default(autoincrement())

    name String

    description String?

    meta FeedItemMeta @relation(fields: [feedItemMetaId], references: [id])

    feed Feed @relation(fields: [feedId], references: [id])

    feedItemMetaId String @db.Uuid

    feedId String @db.Uuid

    createdAt DateTime @default(now())

    updatedAt DateTime @updatedAt
}

model FeedItemMeta {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

    name String

    originId String

    type FeedItemType

    feedItem FeedItem[]

    createdAt DateTime @default(now())

    updatedAt DateTime @updatedAt
}
